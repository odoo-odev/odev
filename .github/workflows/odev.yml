name: odev

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:

  version-bump:
    name: version-bump
    runs-on: ubuntu-22.04
    steps:
      - name: checkout-repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: check-version-bump
        run: bash .github/workflows/version_check.sh ${{ github.event.pull_request.base.ref }}

  pre-commit:
    name: pre-commit
    runs-on: ubuntu-22.04
    steps:
      - name: checkout-repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: setup-python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'

      - name: run-pre-commit
        uses: pre-commit/action@v3.0.0

  unit-tests:
    name: unit-tests-${{ matrix.os }}-python${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          # - macos
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - name: setup-python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: |
            3.10
            ${{ matrix.python-version }}
            3.12
          architecture: x64

      - name: setup-system-dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: postgresql postgresql-client python3-pip libldap2-dev libpq-dev libsasl2-dev build-essential python3-dev libffi-dev
          version: 1.1

      - name: setup-postgresql
        run: |
          sudo service postgresql start
          sudo -u postgres createuser -s $USER

      - name: checkout-repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: restore-odoo-repositories
        id: restore-odoo-repositories
        uses: actions/cache/restore@v4
        with:
          path: ~/odoo/repositories
          key: odoo-repositories-${{ matrix.python-version }}

      - name: clone-odoo-repositories
        if: steps.restore-odoo-repositories.outputs.cache-hit != 'true'
        run: |
          git clone --depth 1 https://github.com/odoo/odoo ~/odoo/repositories/odoo/odoo --branch master
          cd ~/odoo/repositories/odoo/odoo
          git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
          git fetch --depth 1 origin 18.0

      - name: save-odoo-repositories
        if: steps.restore-odoo-repositories.outputs.cache-hit != 'true'
        id: save-odoo-repositories
        uses: actions/cache/save@v4
        with:
          path: ~/odoo/repositories
          key: odoo-repositories-${{ matrix.python-version }}

      - name: setup-python-requirements
        run: |
          python -m ensurepip --upgrade
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: run-unit-tests
        id: unit-tests
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
        run: |
          coverage run -m pytest ./tests --exitfirst
